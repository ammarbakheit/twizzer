{"version":3,"sources":["reducers/postReducer.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","components/privateRoutes.js","components/publicRoutes.js","actions/authAction.js","components/sections/LoggedUserImage.jsx","components/sections/Navbar.jsx","components/sections/UserImege.jsx","components/sections/FollowBtn.jsx","components/Home/Posts/EnggBtns.jsx","actions/postActions.js","components/Home/Comments/AddComments.jsx","components/Home/Comments/CommentUserImage.jsx","components/Home/Comments/SingleComment.jsx","components/Home/Comments/Comments.jsx","components/User/UserPost.jsx","components/User/User.jsx","components/auth/Register.jsx","components/auth/login.jsx","components/Home/Posts/PostUserImege.jsx","components/Home/Posts/SinglePost.jsx","components/Home/Posts/AddPost.jsx","components/Home/Posts/Posts.jsx","components/Home/Home.jsx","components/Profile/UserImege.jsx","components/Profile/SingleUserPost.jsx","components/Profile/User.jsx","components/Profile/Profile.jsx","components/Main.jsx","App.js","index.js"],"names":["inialState","posts","post","comment","like","authenticated","localStorage","getItem","loggedUser","loggedUserPosts","name","token","user","username","userPosts","register","login","follow","followers","loggedUserFollowers","following","followingPpl","UserfollowingPpl","rootReducer","combineReducers","state","action","type","payload","likedPost","auth","logged","length","followingCheck","filter","followerId","currentLoggedUser","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","privateRoutes","Component","component","authed","rest","render","props","children","to","pathname","from","location","PublicRoutes","dispatch","decoded","jwt_decode","axios","get","id","then","data","LoggedUserImege","this","letter","slice","toUpperCase","className","connect","Navbar","logoutSubmit","logout","LoggedUserImage","onClick","removeItem","UserImege","FollowBtn","setState","console","log","userId","onSubmit","e","preventDefault","followedId","nextProps","getStyle","background","color","style","userdata","res","EnggBtns","postId","commentsNumber","likes","newProps","filterComments","newcomment","push","filterLikes","newLike","src","alt","commentToggler","successLike","addComment","commentData","useState","setComment","onChange","value","target","placeholder","CommentUserImege","SingleComment","numbers","Comments","comments","newComment","coment","map","key","UserPost","flexWrap","postBody","postImage","postLikes","User","hide","fetchUser","match","params","parseInt","Register","email","password","error","React","setItem","Login","PostUserImege","SinglePost","toggle","loveToggler","display","AddPost","files","form","FormData","append","file","addPost","bind","disabled","postData","Posts","fetchPosts","newPost","unshift","Home","SingleUserPost","CurrentUser","Profile","Main","path","exact","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d1158813.chunk.js","sourcesContent":["import { FETCH_POSTS, ADD_POST, ADD_COMMENT, LIKE } from '../actions/types';\r\n\r\n\r\nconst inialState = {\r\n    posts: [],\r\n    post: {},\r\n    comment: {},\r\n    like: {}\r\n}\r\n\r\nexport default function(state = inialState, action ) {\r\n    switch (action.type) {\r\n       case FETCH_POSTS: \r\n            return {\r\n                ...state,\r\n                posts: action.payload \r\n            };\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                post: action.payload \r\n            };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                comment: action.comment\r\n            };\r\n        case LIKE: \r\n        return {\r\n            ...state,\r\n            like: action.likedPost\r\n        }\r\n            \r\n        default:\r\n           return state;\r\n    }\r\n}","import {REGISTER, LOGIN, LOGOUT, FOLLOW, FETCH_USER, AUTHENTICATED } from '../actions/types'; \r\n\r\n\r\nconst inialState = {\r\n    authenticated: localStorage.getItem('token') ? true : false,\r\n    loggedUser: {},\r\n    loggedUserPosts: [],\r\n    name: \"\",\r\n    token: '',\r\n    user: {},\r\n    username: \"\",\r\n    userPosts: [],\r\n    register :{},\r\n    login : {},\r\n    follow: {},\r\n    followers: \"\",\r\n    loggedUserFollowers: \"\",\r\n    following: false,\r\n    followingPpl: \"\",\r\n    UserfollowingPpl: \"\",\r\n}\r\n\r\nexport default function(state = inialState, action ) {\r\n    switch(action.type) {\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                authenticated: action.payload,\r\n                loggedUser: {},\r\n                token: '',\r\n                register: '',\r\n                login: ''\r\n            };\r\n        case AUTHENTICATED:\r\n        \r\n            return {\r\n                ...state,\r\n                loggedUser: action.payload.user, \r\n                loggedUserPosts: action.loggedUserPosts,\r\n                name: action.payload.user !== null ? action.payload.name : \"\",\r\n                authenticated: action.payload.logged,\r\n                loggedUserFollowers: action.payload.followers.length,\r\n                followingPpl: action.payload.followingPpl\r\n              \r\n            };\r\n        case REGISTER:\r\n           return {\r\n               ...state,\r\n               register: action.payload,\r\n                authenticated: action.payload.token ? true : false,\r\n                loggedUser: action.payload.user ? action.payload.user : null,\r\n                token: action.payload.token ? action.payload.token : null,\r\n                name: action.payload.user ? action.payload.user.name : null\r\n           }\r\n           case LOGIN:\r\n               return {\r\n                   ...state,\r\n                    login: action.payload,\r\n                    authenticated: action.payload.token ? true : false,\r\n                    loggedUser: action.payload.user ? action.payload.user : null,\r\n                    name: action.payload.user ? action.payload.user.name : null\r\n               };\r\n\r\n            case FOLLOW:\r\n            \r\n                return {\r\n                    ...state,\r\n                    follow: action.payload,\r\n                    following: action.payload.action === \"followed\" ? true : false,\r\n                    followers: action.payload.action === \"followed\" ?  state.followers + 1  : state.followers - 1\r\n                };\r\n\r\n            case FETCH_USER:\r\n                const followingCheck = action.following.filter(follow => {\r\n                        return follow.followerId === action.currentLoggedUser;\r\n                });\r\n                return {\r\n                    ...state,\r\n                    user: action.payload,\r\n                    username: action.payload.name,\r\n                    userPosts: action.userPosts, \r\n                    followers: action.followers,\r\n                    UserfollowingPpl: action.followingPpl.length,\r\n                    following: followingCheck.length > 0 ? true : false \r\n                }\r\n        default :\r\n        return state;\r\n    }\r\n}","import {combineReducers } from 'redux';\r\nimport postReducer from './postReducer';\r\nimport authReducer from './authReducer'\r\n\r\n\r\n\r\nconst rootReducer =  combineReducers({\r\n    posts: postReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport default rootReducer; ","export const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN = 'LOGIN';  \r\nexport const AUTHENTICATED = 'AUTHENTICATED';  \r\nexport const LOGOUT = 'LOGOUT';  \r\nexport const FOLLOW = 'FOLLOW';  \r\nexport const FETCH_USER = 'FETCH_USER';  \r\nexport const ADD_COMMENT = 'ADD_COMMENT';  \r\nexport const LIKE = 'LIKE';  ","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n const  privateRoutes = ({component: Component, authed, ...rest}) => {\r\n    return (\r\n        <Route {...rest} \r\n        render={ (props) => authed === true \r\n        ? <Component {...rest} {...props} >  {props.children} </Component>\r\n        : <Redirect to={\r\n            {\r\n                pathname: '/login',\r\n                state: {\r\n                    from: props.location\r\n                }\r\n            }\r\n         } /> \r\n        } />\r\n    )\r\n};\r\n\r\nexport default privateRoutes;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n const  PublicRoutes = ({component: Component,authed, ...rest}) => {\r\n    return (\r\n        <Route {...rest} \r\n        render={ (props) => authed === false \r\n        ? <Component {...props} /> \r\n        : <Redirect to={\r\n            {\r\n                pathname: '/',\r\n                state: {\r\n                    from: props.location\r\n                }\r\n            }\r\n         } /> \r\n        } />\r\n    )\r\n};\r\n\r\nexport default PublicRoutes;","import {REGISTER, LOGIN,LOGOUT, FOLLOW, FETCH_USER , AUTHENTICATED} from '../actions/types'; \r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem('token');\r\n    dispatch({\r\n        type: LOGOUT,\r\n        payload: false,\r\n    })\r\n}\r\n\r\nexport const authenticated =  () =>   dispatch => {\r\n\r\n   \r\n    \r\n    const token =   localStorage.getItem('token');\r\n\r\n    if(token) {\r\n        const decoded = jwt_decode(token);\r\n\r\n        axios.get(`/api/users/${decoded.id}`)\r\n        .then(user => {\r\n            dispatch({\r\n                type: AUTHENTICATED,\r\n               payload:  {\r\n                    user: user.data.user,\r\n                    name: user.data.user.name,\r\n                   logged: true,\r\n                   followers: user.data.user.followers,\r\n                   followingPpl: user.data.user.following.length,\r\n                   \r\n               },\r\n               loggedUserPosts: user.data.userPosts\r\n           })\r\n        })\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: AUTHENTICATED,\r\n            payload: {\r\n                logged: false,\r\n                user: null,\r\n                followers: 0\r\n            }\r\n        })\r\n    }\r\n   \r\n}\r\n\r\nexport const register = (userdata) => dispatch => {\r\n\r\n         axios.post('/api/users/register', {\r\n            name: userdata.name,\r\n            username: userdata.username,\r\n            email: userdata.email,\r\n            password: userdata.password,\r\n        }).then(res => {\r\n            if(res.data.error) {\r\n                dispatch({\r\n                    type: REGISTER,\r\n                    payload: res.data\r\n                })\r\n                \r\n            } else if(res.data.token) {\r\n                localStorage.setItem('token', res.data.token);\r\n                dispatch({\r\n                    type: REGISTER,\r\n                    payload: res.data\r\n                })\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport const login = (userdata) => dispatch => {\r\n    console.log(\"action called\", userdata);\r\n    \r\n    axios.post('/api/users/login', {\r\n       email: userdata.email,\r\n       password: userdata.password,\r\n   }).then(res => {\r\n       if(res.data.error) {\r\n           dispatch({\r\n               type: LOGIN,\r\n               payload: res.data\r\n           })\r\n           \r\n       } else if(res.data.token) {\r\n           localStorage.setItem('token', res.data.token);\r\n           dispatch({\r\n               type: LOGIN,\r\n               payload: res.data\r\n           })\r\n       }\r\n   })\r\n}\r\n\r\nexport const follow = (userdata) => dispatch => {\r\n \r\n    \r\n    axios.post(`/api/users/follow/${userdata.followedId}`, {\r\n        followerId: userdata.followerId,\r\n        type: userdata.type\r\n    }).then(res => {\r\n        dispatch({\r\n            type: FOLLOW,\r\n            payload: res.data,\r\n            action: res.data.action\r\n        })\r\n    }) \r\n}\r\n\r\nexport const fetchUser = userdata => dispatch => {\r\n\r\n        const token =   localStorage.getItem('token');\r\n        const decoded = jwt_decode(token);\r\n        const id = decoded.id;\r\n\r\n    axios.get(`/api/users/${userdata.userId}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: FETCH_USER,\r\n            payload: res.data.user,\r\n            followers: res.data.user.followers.length,\r\n            following: res.data.user.followers,\r\n            currentLoggedUser: id,\r\n            followingPpl: res.data.user.following,\r\n            userPosts: res.data.userPosts\r\n        })\r\n    }) \r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport './userImage.css';\r\nimport { connect } from 'react-redux';\r\nimport { authenticated } from '../../actions/authAction';\r\n\r\n\r\n\r\n class LoggedUserImege extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.authenticated()\r\n  }\r\n\r\n  render() {\r\n    const letter = this.props.name.slice(0,2).toUpperCase();\r\n    return (\r\n      <div className=\"image-wrapper\"> \r\n      <div className=\"user-image\">\r\n          <span>{ letter }</span>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  name: state.auth.name\r\n})\r\n\r\nexport default connect(mapStateToProps,  { authenticated })(LoggedUserImege);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoggedUserImage from '../sections/LoggedUserImage';\r\nimport './navbar.css'\r\nimport { connect } from 'react-redux';\r\nimport { logout, authenticated } from '../../actions/authAction';\r\n\r\n class Navbar extends Component {\r\n\r\n  componentWillMount() {\r\n    this.props.authenticated()\r\n  }\r\n\r\n  logoutSubmit = () => {\r\n    this.props.logout();\r\n \r\n    \r\n  }\r\n  render() {\r\n    return (\r\n      <header>\r\n      <Link to='/'> \r\n       <button className=\"logo\">\r\n          Twizzer\r\n       </button>\r\n      </Link>\r\n      <ul>\r\n          <li> \r\n            <Link to='/profile'> \r\n              <button >\r\n                <LoggedUserImage name={this.props.loggedUser.name} />\r\n              </button> \r\n            </Link>\r\n            \r\n          </li>\r\n          <li><button className=\"button\" onClick={this.logoutSubmit}>Logout</button></li>\r\n      </ul>\r\n    </header> \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedUser: state.auth.loggedUser\r\n})\r\nexport default connect(mapStateToProps, {logout, authenticated})(Navbar);","import React, { Component } from 'react';\r\nimport './userImage.css';\r\nimport { connect } from 'react-redux';\r\nimport { authenticated } from '../../actions/authAction';\r\n\r\n\r\n\r\n class UserImege extends Component {\r\n      constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n            name: props.name\r\n          }\r\n      }\r\n  componentWillMount() {\r\n    this.props.authenticated();\r\n  }\r\n\r\n\r\n  render() {\r\n  \r\n    const letter = this.state.name.slice(0,2).toUpperCase();\r\n    return (\r\n      <div className=\"image-wrapper\"> \r\n      <div className=\"user-image\">\r\n          <span>{ letter }</span>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  name: state.auth.username\r\n})\r\n\r\nexport default connect(mapStateToProps,  { authenticated })(UserImege);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { follow } from '../../actions/authAction';\r\n\r\n class FollowBtn extends Component {\r\n    constructor() {\r\n        super()\r\n            \r\n            this.state ={\r\n                follow: false,\r\n\r\n            }\r\n    }\r\n    onClick = () => {\r\n        this.setState({\r\n           follow: !this.state.follow\r\n        })\r\n\r\n        console.log(this.props.userId, this.props.loggedUser.id, this.state.follow);\r\n        \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n     \r\n            if(nextProps.following === true) {\r\n                this.setState({ follow: true})\r\n            } else if(nextProps.following === false) {\r\n                    this.setState({ follow: false})\r\n            }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            follow: this.props.following\r\n        })\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.follow({\r\n            followerId: this.props.loggedUser.id,\r\n            followedId: this.props.userId,\r\n            type: this.state.follow === true ? \"follow\" : 'unfollow'\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const getStyle = {\r\n            background: this.state.follow === true ?'#00bcd4' : '#fff'  ,\r\n            color: this.state.follow === true ? '#fff' :  '#00bcd4' \r\n        }\r\n        return (\r\n            <div> \r\n                <form onSubmit={this.onSubmit}>\r\n                    <button \r\n                        type=\"submit\"\r\n                        onClick={this.onClick} \r\n                        style={getStyle} \r\n                        className=\"button\">{ this.state.follow === true ? 'following' : ' follow ' }\r\n                    </button>\r\n                </form>\r\n                 \r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedUser: state.auth.loggedUser,\r\n    followers: state.auth.follow,\r\n    following: state.auth.following\r\n})\r\n\r\nexport default connect(mapStateToProps, { follow })(FollowBtn)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { like } from '../../../actions/postActions';\r\n\r\n class EnggBtns extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            commentsNumber: props.commentsNumber || [],\r\n            likes: props.likes || []\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n   \r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n\r\n        //not alowing it to increment the number of comments twice\r\n        const comments = this.state.commentsNumber;\r\n        const filterComments = comments.filter(comment => (\r\n            comment.id === newProps.newcomment.id\r\n        ));\r\n            \r\n        if(newProps.newcomment && filterComments.length === 0) {\r\n            if(newProps.newcomment.postId === this.props.postId) {\r\n                this.props.commentsNumber.push(newProps.newcomment)\r\n            }\r\n        }\r\n\r\n        const likes = this.state.likes;\r\n        const filterLikes = likes.filter( like => (\r\n            like.id === newProps.newLike.id\r\n        ))\r\n\r\n        if(newProps.newLike && filterLikes.length === 0) {\r\n            if(newProps.newLike.postId === this.props.postId) {\r\n                this.props.likes.push(newProps.newLike)\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.like({\r\n            userId: this.props.userId,\r\n            postId: this.props.postId\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"engg-wrapper\">\r\n                <button className=\"engg-btns\">\r\n                     <img className=\"engg-btns-svg\" src=\"./images/btns/share-alt.svg\" alt=\"\"/>\r\n                </button>\r\n                <button onClick={ () => this.props.commentToggler() } className=\"engg-btns\">\r\n                     <img className=\"engg-btns-svg\" src=\"./images/btns/comment-dots.svg\" alt=\"\"/>\r\n                     <span style={{ color: \"crimson\" }}> {this.props.commentsNumber ? this.props.commentsNumber.length : 0 } </span>\r\n                </button>\r\n                <form onSubmit={ this.onSubmit }>\r\n                    <button type=\"submit\"  className=\"engg-btns\">\r\n                        <img className=\"engg-btns-svg\" src=\"./images/btns/heart.svg\" alt=\"\"/>\r\n                        <span style={{ color: \"crimson\" }}> { this.props.likes  ? this.props.likes.length : 0 } </span>\r\n                    </button>\r\n                </form>\r\n                 \r\n                \r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ \r\n    newcomment: state.posts.comment,\r\n    newLike: state.posts.like\r\n})\r\n\r\nexport default connect(mapStateToProps, { like })(EnggBtns);","import { FETCH_POSTS, ADD_POST, ADD_COMMENT,LIKE } from '../actions/types';\r\nimport axios from 'axios';\r\n\r\nexport const  fetchPosts =  () =>   dispatch  => {\r\n           \r\n       axios.get('/api/posts')\r\n       .then(posts => {\r\n        dispatch({\r\n            type: FETCH_POSTS,\r\n            payload: posts.data \r\n        })\r\n       })\r\n}\r\n\r\nexport const  addPost =  (postData) =>   dispatch  => {\r\n      \r\n   \r\n    \r\n\r\n           axios.post('/api/posts', postData)\r\n            .then(post => { \r\n                dispatch({\r\n                    type: ADD_POST,\r\n                    payload: post.data\r\n                })\r\n            })\r\n    \r\n           \r\n}\r\n\r\nexport const addComment = (commentData) => dispatch => {\r\n        \r\n            axios.post('api/posts/comment', commentData)\r\n            .then(res => {\r\n                dispatch({\r\n                    type: ADD_COMMENT,\r\n                    comment: res.data\r\n                })\r\n            })\r\n} \r\n\r\nexport const like = (data) => dispatch => {\r\n  \r\n    \r\n    axios.post(`/api/posts/like`, data)\r\n    .then(res => {\r\n        console.log(res.data);\r\n        \r\n        dispatch({\r\n            type: LIKE,\r\n            likedPost: res.data.successLike\r\n        })\r\n  \r\n\r\n    })\r\n}","import React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../../actions/postActions';\r\n\r\n\r\n\r\nfunction AddComments(props) {\r\n\r\n    const [ comment, setComment ] = useState(\"\");\r\n\r\n    const handleOnChange = (e) => {\r\n        setComment(e.target.value)\r\n        \r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n            e.preventDefault();\r\n            // console.log(comment);\r\n           props.addComment({\r\n               userId: props.userId,\r\n               username: props.username,\r\n               postId: props.postId,\r\n                comment\r\n            });\r\n\r\n           setComment(\"\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-comment-wrapper\">\r\n            <form onSubmit={ handleOnSubmit }>\r\n                <textarea onChange={ (value) =>  handleOnChange(value)} value={ comment } placeholder=\"add your comment\"> </textarea>\r\n                 <button className=\"button comment-btn\" type=\"submit\" > Comment</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.auth.loggedUser.id,\r\n    username: state.auth.loggedUser.name\r\n})\r\n\r\nexport default connect(mapStateToProps, { addComment })(AddComments);\r\n","\r\nimport React, { useState } from 'react'\r\nimport '../Posts/userImage.css'\r\n\r\nexport default function CommentUserImege(props) {\r\n  const [ username, setUsername ] = useState(props.name )\r\n  // if(username) {\r\n  //   const letter = username.slice(0,2).toUpperCase();\r\n  //   return letter;\r\n  // }\r\n \r\n  \r\n  return (\r\n    <div className=\"comment-image-wrapper\">\r\n        <div className=\"comment-user-image\">\r\n            <span>{ username ? username.slice(0,2).toUpperCase() : \"\" }</span>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport CommentUserImage from './CommentUserImage';\r\nimport './comment.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class SingleComment extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            comment: props.comment,\r\n            commentsNumber: props.numbers\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"single-comment-wrapper\">       \r\n                <div className=\"comment-header\">\r\n                <CommentUserImage name={ this.state.comment.username } />  \r\n                    <Link to={ `/${ this.state.comment.userId }`} >\r\n                        <span> { this.state.comment.username } </span>\r\n                    </Link>\r\n                    {/* <p>@ammar12c</p> */}\r\n                </div>     \r\n                <div className=\"comment-body\"> \r\n                    <p>\r\n\r\n\r\n                      {\r\n                          this.state.comment.comment \r\n                      }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport AddComment from './AddComments'\r\nimport SingleComment from './SingleComment';\r\nimport './comment.css'\r\nimport { connect } from 'react-redux';\r\n\r\n class Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: props.comments || []\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps({ newComment }) {\r\n            const filtered = this.state.comments.filter( coment => {\r\n                return coment.id === newComment.id\r\n            });\r\n        \r\n          if(filtered.length === 0 && newComment.postId === this.props.postId)  {\r\n                this.state.comments.push(newComment)\r\n            }\r\n      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                  this.state.comments.map( comment => {\r\n                        return comment === \"\"  ?  \"\" :   <SingleComment key={ comment.id } comment={ comment } numbers ={ this.state.comments.length } /> \r\n                    })\r\n                }\r\n              \r\n                <AddComment postId={ this.props.postId } />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    newComment: state.posts.comment\r\n})\r\nexport default connect(mapStateToProps, null )( Comments)","import React from 'react';\r\nimport UserImage from '../sections/UserImege';\r\nimport  EnggBtns from  '../Home/Posts/EnggBtns';\r\nimport Comments from '../Home/Comments/Comments';\r\n\r\n\r\nexport default function UserPost(props) {\r\n  // console.log(post.user.name);\r\n  const getStyle = {\r\n    flexWrap: \"wrapp !important\"\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"single-post-wrapper\">\r\n      <div className=\"user-post-header\">\r\n            <div style={getStyle} className=\"user-post-info\">\r\n              <UserImage name={ props.user.name } />\r\n                <span> { props.user.name} </span>\r\n            </div>\r\n           <small className=\"user-handle\"> @{props.user.username } </small>\r\n      </div>\r\n      <div className=\"post-body\">\r\n\r\n           <p>\r\n             {\r\n               props.post.postBody\r\n             }\r\n           </p>\r\n          \r\n           {\r\n            <img src={`./uploads/posts/${props.post.postImage}`} alt=\"\"/>\r\n          }\r\n           \r\n      </div>\r\n      <div className=\"post-footer\">\r\n         <EnggBtns \r\n               postId={ props.post.id } \r\n               userId={ props.loggedUser.id }\r\n               likes={ props.post.postLikes ?  props.post.postLikes : [] } \r\n              commentsNumber={ props.post.comments ? props.post.comments : [] } />\r\n      </div>\r\n      <div className=\"comment-wrapper\">\r\n        <Comments postId={ props.post.id } comments={ props.post.comments }  />\r\n      </div>\r\n   </div>\r\n      </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../sections/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../../actions/authAction';\r\nimport UserImage from '../sections/UserImege';\r\nimport FollowBtn from '../sections/FollowBtn';\r\nimport UserPost from './UserPost';\r\n\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hide:  false\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n  \r\n        \r\n    }\r\n\r\n    componentWillMount( ){\r\n        this.props.fetchUser({\r\n            userId: this.props.match.params.id\r\n        })\r\n\r\n        if( this.props.user.id === 34) {\r\n            this.setState({\r\n                hide: true\r\n            })\r\n        }\r\n   \r\n    }\r\n \r\n    render() {\r\n        \r\n        \r\n       return (\r\n        <div>\r\n        <Navbar />\r\n        <div className=\"user-wrapper\">\r\n         <div className=\"user-info-wrapper\">\r\n             <div className=\"user-info-header\">\r\n                <UserImage username={ this.props.user.name } className=\"profile-image\" />\r\n             </div>\r\n             <div className=\"user-info-data\">\r\n                 <div className=\"user-data\">\r\n                     <span className=\"name\">{this.props.user.name}</span>\r\n                     <small className=\"name\">@{ this.props.user.username }</small>\r\n                 </div>\r\n                 <div className=\"user-others\">\r\n                     <span className=\"bio\"></span>\r\n                     <div className=\"follow\"> \r\n                        {\r\n                            \r\n                            parseInt(this.props.match.params.id, 10) === this.props.id ? '' :    <FollowBtn userId={ this.props.user.id } />\r\n                        }\r\n                       \r\n                         <div className=\"followers\"> <small> { this.props.followers } </small> <span>followers</span></div>\r\n                         <div className=\"following\"> <small> {  this.props.followingPpl }</small> <span>following</span></div>\r\n                     </div>\r\n                 </div>\r\n             </div> \r\n         </div>\r\n\r\n         <div className=\"user-posts\">\r\n                {\r\n                    this.props.userPosts.map(post => {\r\n                        return (\r\n                            <UserPost loggedUser={this.props.loggedUser } key={ post.id } post={post} user={this.props.user} />\r\n                        )\r\n                    })\r\n                }\r\n         </div>\r\n        </div>\r\n     </div>\r\n       ) \r\n       \r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n    loggedUser:state.auth.loggedUser,\r\n    id: state.auth.loggedUser.id,\r\n    followers: state.auth.followers,\r\n    following: state.auth.following,\r\n    followingPpl: state.auth.UserfollowingPpl,\r\n    userPosts: state.auth.userPosts,\r\n})\r\nexport default connect(mapStateToProps, { fetchUser })(User);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { register } from '../../actions/authAction';\r\n\r\n class Register extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n            this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.register({\r\n            name: this.state.name,\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        })\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n    \r\n     \r\n        \r\n      \r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-wrapper\">\r\n                <form  onSubmit={this.onSubmit}>\r\n                <div className=\"errors-wrapper\">\r\n                        <p className=\"errors\">{ this.props.error } </p>\r\n                </div>\r\n                    <input onChange={this.onChange} value={this.state.name}  type=\"text\" name=\"name\" placeholder=\"name\"/>\r\n                    <input  onChange={this.onChange}  value={this.state.username} type=\"text\" name=\"username\" placeholder=\"username\"/>\r\n                    <input  onChange={this.onChange}  value={this.state.email}  type=\"email\" name=\"email\" placeholder=\"email\"/>\r\n                    <input onChange={this.onChange}   value={this.state.password} type=\"password\" name=\"password\" placeholder=\"password\"/>\r\n                    <button className=\"button\"  type=\"submit\">Register</button> \r\n                </form>\r\n                <div className=\"form-footer\">\r\n                    <p>You have account ? </p>\r\n                    <Link to=\"/login\" >\r\n                         <button className=\"button\"> Login</button>\r\n                    </Link>\r\n                 \r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\nconst  mapStateToProps = state => ({\r\n    error: state.auth.register.error\r\n \r\n  })\r\n\r\nexport default  connect(mapStateToProps, {register})(Register);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { login } from '../../actions/authAction';\r\n\r\n class Login extends Component {\r\n     constructor() {\r\n         super();\r\n\r\n         this.state = {\r\n             email: '',\r\n             password: ''\r\n         }\r\n     }\r\n\r\n     onChange = e => {\r\n         this.setState({[e.target.name]: e.target.value})\r\n     }\r\n\r\n     onSubmit = e => {\r\n         e.preventDefault();\r\n         console.log(this.state);\r\n         \r\n         this.props.login(this.state)\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-wrapper\">\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"errors-wrapper\">\r\n                        <p className=\"errors\"> {this.props.error} </p>\r\n                </div>\r\n                    <input   type=\"email\" onChange={this.onChange} value={this.state.email} name=\"email\" placeholder=\"email\"/>\r\n                    <input  type=\"password\" onChange={this.onChange} value={this.state.password} name=\"password\" placeholder=\"password\"/>\r\n                    <button className=\"button\" type=\"submit\">login</button>\r\n                </form>\r\n                <div className=\"form-footer\">\r\n                    <p>You  dont have account ? </p>\r\n                    <Link to=\"/register\" >\r\n                        <button className=\"button\" > Register</button>\r\n                    </Link>\r\n                    \r\n                </div>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst  mapStateToProps = state => ({\r\n    error: state.auth.login.error\r\n \r\n  })\r\n\r\nexport default  connect(mapStateToProps, {login})(Login);","import React from 'react'\r\nimport './userImage.css'\r\n\r\nexport default function PostUserImege(props) {\r\n\r\n  const letter = props.name.slice(0,2).toUpperCase();\r\n  \r\n  return (\r\n    <div className=\"image-wrapper\">\r\n        <div className=\"user-image\">\r\n            <span>{letter}</span>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {Component, useState } from 'react'\r\nimport EnggBtns from './EnggBtns'\r\nimport PostUserImage from './PostUserImege';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authenticated } from '../../../actions/authAction'\r\nimport Comments from '../Comments/Comments';\r\n\r\n\r\n class SinglePost extends Component {\r\n   constructor(props){\r\n     super(props);\r\n\r\n      this.state = {\r\n        toggle: true\r\n      }\r\n   }\r\n\r\n  commentToggler = () => {\r\n      this.setState({\r\n        toggle: !this.state.toggle\r\n      })\r\n  }\r\n\r\n  loveToggler = () => {\r\n    console.log(\"love\");\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div className=\"single-post-wrapper\">\r\n      <div className=\"post-header\">\r\n            <div className=\"user-header\">\r\n                <PostUserImage name={this.props.post.user.name} />\r\n                <Link to={`/${this.props.post.user.id}`} >\r\n                    <span> {this.props.post.user.name} </span>\r\n                </Link>\r\n         \r\n                <small className=\"user-handle\"> @{this.props.post.user.username}  </small>\r\n            </div>\r\n       \r\n      </div>\r\n      <div className=\"post-body\">\r\n\r\n           <p>\r\n              {this.props.post.postBody}\r\n           </p>\r\n          \r\n          {\r\n            <img src={`./uploads/posts/${this.props.post.postImage}`} alt=\"\"/>\r\n          }\r\n           \r\n      </div>\r\n     \r\n      <div className=\"post-footer\">\r\n          <EnggBtns \r\n            postId={ this.props.post.id } \r\n            userId={ this.props.loggedUser.id }\r\n            commentsNumber={ this.props.post.comments ? this.props.post.comments : [] }\r\n            commentToggler={ this.commentToggler }\r\n            loveToggler={ this.loveToggler }\r\n            likes={ this.props.post.likes ?  this.props.post.likes : [] } />\r\n      </div>\r\n      <div style={ this.state.toggle === false ? { display: \"none\" } : { display: \"unset\" } } className=\"comment-wrapper\">\r\n        <Comments  postId={ this.props.post.id } comments={ this.props.post.comments } />\r\n      </div>\r\n      </div>\r\n     \r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  loggedUser: state.auth.loggedUser\r\n})\r\nexport default connect(mapStateToProps, null )(SinglePost)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addPost } from '../../../actions/postActions.js';\r\n\r\n\r\n class AddPost extends React.Component {\r\n   constructor(){\r\n     super();\r\n\r\n     this.state = {\r\n       post: '',\r\n       file: {}\r\n     }\r\n\r\n     this.onChange = this.onChange.bind(this)\r\n     this.onSubmit = this.onSubmit.bind(this)\r\n  \r\n   }\r\n\r\n   onChange = (e) => {\r\n\r\n     if(e.target.files) {\r\n      this.setState({[e.target.name]: e.target.files[0]})\r\n     }\r\n     else if(e.target.value) {\r\n      this.setState({[e.target.name]: e.target.value})\r\n     }\r\n   }\r\n   onSubmit =  e => {\r\n      e.preventDefault();\r\n    \r\n      const form = new FormData();\r\n      form.append('postBody', this.state.post);\r\n      form.append('file', this.state.file);\r\n      form.append('userId', this.props.user.id);\r\n      \r\n      this.props.addPost(form);\r\n      this.setState({\r\n        post: \"\",\r\n        file: \"\"\r\n      })\r\n   }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"add-post-wrapper\">\r\n      <form onSubmit={this.onSubmit}>\r\n          <textarea   onChange={this.onChange} value={ this.state.post } id=\"txt\"  name=\"post\" placeholder=\"Whats happening\"></textarea>\r\n          <input className=\"button\" type=\"file\"    onChange={this.onChange}  name=\"file\" id=\"\"/>\r\n          <p className=\"post-errors\">\r\n          \r\n          </p>\r\n          <button disabled={this.state.post === '' ? true : false}    className=\"button\">Post</button>\r\n      </form>\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => ({\r\n  user: state.auth.loggedUser\r\n})\r\n\r\nexport default connect(mapStatetoProps, { addPost })(AddPost);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchPosts } from '../../../actions/postActions.js';\r\n\r\nimport SinglePost from './SinglePost';\r\nimport AddPost from './AddPost'; \r\nimport './posts.css'\r\n\r\n\r\n\r\n class Posts extends Component {\r\n    \r\n  UNSAFE_componentWillMount() {\r\n    this.props.fetchPosts();\r\n\r\n    \r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.newPost){\r\n      // console.log(nextProps.newPost);\r\n      \r\n      this.props.posts.unshift(nextProps.newPost)\r\n    }\r\n  }\r\n\r\n  render() {\r\n  \r\n  return (\r\n\r\n    <div className=\"posts-wrapper\"> \r\n       <AddPost />\r\n       <div className=\"post-wrapper\">\r\n          {\r\n            this.props.posts.map(post => {\r\n              return  (\r\n                   <SinglePost key={post.id} post={post}  />\r\n                ) \r\n            })\r\n          }\r\n       </div>\r\n    </div>\r\n  )\r\n  \r\n\r\n  }\r\n}\r\n \r\nconst  mapStateToProps = state => ({\r\n  posts: state.posts.posts,\r\n  newPost: state.posts.post.post\r\n}) \r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Posts);\r\n","import React, { Component } from 'react'\r\nimport Navbar from '../sections/Navbar'\r\nimport Posts from './Posts/Posts';\r\n\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n       \r\n        \r\n        return (\r\n            <div> \r\n                <Navbar />\r\n                <Posts />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './userImage.css';\r\nimport { connect } from 'react-redux';\r\nimport { authenticated } from '../../actions/authAction';\r\n\r\n\r\n\r\n class UserImege extends Component {\r\n      constructor(props) {\r\n        super(props);\r\n          this.state = {\r\n            name: props.username\r\n          }\r\n      }\r\n  componentWillMount() {\r\n    this.props.authenticated()\r\n  }\r\n\r\n  render() {\r\n  \r\n    const letter = this.props.username.slice(0,2).toUpperCase();\r\n    return (\r\n      <div className=\"image-wrapper\"> \r\n      <div className=\"user-image\">\r\n          <span>{ letter }</span>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  name: state.auth.username\r\n})\r\n\r\nexport default connect(mapStateToProps,  { authenticated })(UserImege);","import React from 'react'\r\nimport UserImage from './UserImege'\r\nimport Comments from '../Home/Comments/Comments';\r\nimport  EnggBtns from  '../Home/Posts/EnggBtns';\r\n\r\n\r\n\r\nexport default function SingleUserPost(props) {\r\n  // console.log(post.user.name);\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"single-post-wrapper\">\r\n      <div className=\"user-post-header\">\r\n            <div className=\"user-post-info\">\r\n              <UserImage username={ props.user.name } />\r\n                <span> { props.user.name} </span>\r\n            </div>\r\n           <small className=\"user-handle\"> @{props.user.username } </small>\r\n      </div>\r\n      <div className=\"post-body\">\r\n\r\n           <p>\r\n             {\r\n               props.post.postBody\r\n             }\r\n           </p>\r\n          \r\n          \r\n            \r\n          {\r\n            <img src={`./uploads/posts/${props.post.postImage}`} alt=\"\"/>\r\n          }\r\n      </div>\r\n      <div className=\"post-footer\">\r\n        <EnggBtns \r\n                postId={ props.post.id } \r\n                userId={ props.user.id }\r\n                likes={ props.post.postLikes ?  props.post.postLikes : [] } \r\n                commentsNumber={ props.post.comments ? props.post.comments : [] } />\r\n        </div>\r\n      <div className=\"comment-wrapper\">\r\n        <Comments postId={ props.post.id } comments={ props.post.comments }  />\r\n      </div>\r\n   </div>\r\n      </div>\r\n  )\r\n}\r\n ","import React, { Component } from 'react'\r\nimport LoggedUserImage from '../sections/LoggedUserImage'\r\nimport SingleUserPost  from './SingleUserPost'\r\nimport FollowBtn from '../sections/FollowBtn';\r\nimport './profile.css';\r\n\r\nimport { authenticated } from '../../actions/authAction';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n class CurrentUser extends Component {\r\n     \r\n     componentWillMount() {\r\n        //  this.props.authenticated()\r\n     }\r\n    render() {\r\n       \r\n         \r\n        return (\r\n           <div className=\"user-wrapper\">\r\n                <div className=\"user-info-wrapper\">\r\n                    <div className=\"user-info-header\">\r\n                       <LoggedUserImage username={ this.props.loggedUser.name } className=\"profile-image\" />\r\n                    </div>\r\n                    <div className=\"user-info-data\">\r\n                        <div className=\"user-data\">\r\n                            <span className=\"name\"> { this.props.loggedUser.name } </span>\r\n                            <small className=\"username\">@ { this.props.loggedUser.username}</small>\r\n                        </div>\r\n                        <div className=\"user-others\">\r\n                            <span className=\"bio\"></span>\r\n                            <div className=\"follow\">\r\n                                <div className=\"followers\"> <small>{ this.props.loggedUserFollowers }</small> <span>followers</span></div>\r\n                                <div className=\"following\"> <small>{ this.props.followingPpl }</small> <span>following</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n\r\n                <div className=\"user-posts\">\r\n                  {\r\n                     this.props.loggedUserPosts.map(post => {\r\n                          return (\r\n                          <SingleUserPost key={post.id} post={post}  user={this.props.loggedUser} />\r\n                          )\r\n                      })\r\n                  }\r\n                </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToprops = state => ({\r\n    loggedUser: state.auth.loggedUser,\r\n    loggedUserPosts: state.auth.loggedUserPosts,\r\n    loggedUserFollowers: state.auth.loggedUserFollowers,\r\n    followingPpl: state.auth.followingPpl\r\n})\r\nexport default connect(mapStateToprops ,  null)(CurrentUser)","import React, { Component } from 'react'\r\nimport CurrentUser from './User'\r\nimport Navbar from '../sections/Navbar';\r\nimport './profile.css'\r\nimport { authenticated } from '../../actions/authAction';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n class Profile extends Component {\r\n\r\n  componentWillMount() {\r\n    // this.props.authenticated()\r\n  }\r\n  render() {\r\n   \r\n    \r\n    return (\r\n      <div>\r\n        <Navbar  />\r\n        <CurrentUser  />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst  mapStateToProps = state => ({\r\n  // auth: state.auth.authenticated\r\n\r\n})  \r\nexport default connect(mapStateToProps, null )(Profile);\r\n","import React, { Component} from 'react'\r\nimport { BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport PrivateRoutes from './privateRoutes';\r\nimport PublicRoutes from './publicRoutes';\r\nimport  User from './User/User';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport Register from './auth/Register';\r\nimport Login from './auth/login';\r\nimport Home from './Home/Home';\r\nimport Profile from './Profile/Profile';\r\n\r\n\r\nimport './main.css'\r\nimport {authenticated} from '../actions/authAction';\r\n\r\n\r\n class Main extends Component {\r\n    // constructor() {\r\n    //     super();\r\n\r\n      \r\n\r\n    //     this.state = {\r\n    //         id: '',\r\n    //         name: '',\r\n    //         username: '',\r\n    //         email: '',\r\n    //         userImage: '',\r\n    //         password: '',\r\n    //         registerError: '',\r\n    //         loginError: '',\r\n    //         logged: localStorage.getItem('token') || false,\r\n    //         token: localStorage.getItem('token') ,\r\n    //         posts: [],\r\n    //         newPostTrigger: false,\r\n    //         newPost: {},\r\n    //         newPostError: '',\r\n    //         postBody: '',\r\n    //         postImage: {},\r\n    //         profile: false,\r\n    //        user: {},\r\n    // }\r\n\r\n    //     this.handleChange = this.handleChange.bind(this)\r\n    //     this.handleRegisterSubmit = this.handleRegisterSubmit.bind(this)\r\n    //     const token = localStorage.getItem('token')\r\n    //     if(token) {\r\n    //         this.setState({user:{logged: true}})\r\n    //     }\r\n        \r\n    // }\r\n    \r\n \r\n    // //inputs change\r\n    // handleChange = input => e => {\r\n    //     e.preventDefault()\r\n    //     this.setState({[input]: e.target.value})\r\n    // }\r\n\r\n    // //Login handlers\r\n    // handleloginSubmit = e  => {\r\n    //     e.preventDefault()\r\n    //     axios.post('/api/users/login', {\r\n    //         email: this.state.email,\r\n    //         password: this.state.password\r\n    //     }).then(res => {\r\n    //         if(res.data.error) {\r\n    //             this.setState({loginError: res.data.error})\r\n    //         }\r\n    //         else if(res.data.token) {\r\n    //             localStorage.setItem('token', res.data.token)\r\n    //             this.setState({logged: res.data.token,id: res.data.user.id, user: res.data.user, name:res.data.user.name})\r\n    //         }\r\n        \r\n            \r\n    //     })\r\n         \r\n    // }\r\n\r\n    // //Register Handlers\r\n    // handleRegisterSubmit = e => { \r\n    //     e.preventDefault();\r\n    //     axios.post('/api/users/register', {\r\n    //         name: this.state.name,\r\n    //         username: this.state.username,\r\n    //         email: this.state.email,\r\n    //         password: this.state.password,\r\n    //     }).then(res => {\r\n    //         if(res.data.error) {\r\n    //             this.setState({registerError:res.data.error})\r\n    //             console.log(this.state.registerError);\r\n                \r\n    //         } else if(res.data.token) {\r\n    //             localStorage.setItem('token', res.data.token)\r\n    //             this.setState({logged: res.data.token})\r\n    //             this.setState({id: res.data.user.id})\r\n    //             this.setState({user: res.data.user})\r\n    //         }\r\n            \r\n\r\n         \r\n            \r\n    //     })\r\n        \r\n    // }\r\n\r\n    // //handling Logout\r\n    // logout = () => {\r\n    //     localStorage.removeItem('token')\r\n    //     localStorage.removeItem('logged')\r\n    //     this.setState({logged:false, id: '', name: '', email: '', password: '', token: '', user: ''})\r\n       \r\n    // }\r\n\r\n    // //fetching Posts\r\n    // UNSAFE_componentWillMount = async () => {\r\n\r\n    //     if(this.state.logged) {\r\n    //         const token = localStorage.getItem('token')\r\n    //         const decoded = jwt_decode(token)\r\n    //         this.setState({\r\n    //             id: decoded.id,\r\n    //             name: decoded.name,\r\n    //             email: decoded.email,\r\n       \r\n    //         })\r\n    //     }\r\n       \r\n    //     // //fetch all posts\r\n    //     // const posts = await  axios.get('/api/posts')\r\n    //     // // console.log(posts.data.posts);\r\n    //     // this.setState({posts: posts.data.posts})\r\n     \r\n    //    //get the user with posts\r\n    //    const user = await axios.get(`/api/users/${this.state.id}`)\r\n      \r\n    //    this.setState({user: user.data})\r\n        \r\n\r\n    // }\r\n\r\n    \r\n\r\n    // //add posts\r\n\r\n    // handlePostChange = input => e => {\r\n    //     if(e.target.files) {\r\n    //         this.setState({[input]: e.target.files[0]})\r\n           \r\n    //     } else if(input === 'postBody') {\r\n    //         this.setState({postBody: e.target.value})\r\n    //     }\r\n\r\n        \r\n    // }\r\n    // handlePostSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n        \r\n       \r\n        \r\n    //     const formData = new FormData();\r\n    //     formData.append('file', this.state.postImage)\r\n    //     formData.append('postBody', this.state.postBody)\r\n    //     formData.append('userId', this.state.id)\r\n\r\n    //     const res = await axios.post('/api/posts', formData, {\r\n    //         headers: {\r\n    //             \"token\": this.state.logged\r\n    //         }\r\n    //     })\r\n    //     if(res.data.error) {\r\n    //         console.log(res.data.error);\r\n    //         this.setState({newPostError: res.data.error})\r\n    //     } else {\r\n    //         // console.log(res.data.post);\r\n    //         this.setState({newPost: res.data.post})\r\n    //         this.setState({newPostTrigger: !this.state.newPostTrigger})\r\n          \r\n          \r\n    //     }\r\n       \r\n         \r\n        \r\n        \r\n    // }\r\n\r\n    componentWillMount() {\r\n        this.props.authenticated();\r\n     \r\n        // console.log(this.props.auth.authenticated);\r\n    }\r\n   \r\n   \r\n   \r\n    render() {\r\n        return (\r\n            <Router >\r\n                <Switch >\r\n            \r\n                \r\n                   <PublicRoutes authed={this.props.auth} path='/register' exact component={Register} />\r\n                   <PublicRoutes authed={this.props.auth} path='/login' exact component={Login} />\r\n\r\n                   <PrivateRoutes  authed={this.props.auth} path='/profile' exact component={Profile} />\r\n                   <PrivateRoutes  authed={this.props.auth} path=\"/:id\"  component={User} />\r\n                   <PrivateRoutes authed={this.props.auth} path='/' exact component={Home} />\r\n           \r\n\r\n                \r\n               \r\n                   \r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst  mapStateToProps = state => ({\r\n    auth: state.auth.authenticated\r\n \r\n  })  \r\nexport default connect(mapStateToProps, {authenticated})(Main);","import React, { Component } from 'react'\r\nimport {Provider} from 'react-redux';\r\nimport store from './store'\r\n\r\nimport Main from './components/Main';\r\n\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}> \r\n        <div className=\"app\"> \r\n            <Main />\r\n        </div>\r\n      </Provider>\r\n    \r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}